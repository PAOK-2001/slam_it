<launch>


  <node pkg="tf2_ros" type="static_transform_publisher" name="laser_to_cam_link" args="0 0 0 0 0 0 /laser /camera_link" />

  <include file="$(find realsense2_camera)/launch/rs_camera.launch" >
    <arg name="align_depth" value="true"/>
  </include>

  <!-- Lidar node launch -->
  <include file="$(find rplidar_ros)/launch/rplidar_a1.launch"/>



  <arg name="frame_id" default="laser"/>  

  <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
    <param name="map_frame" value="hector_map" />
    <param name="base_frame" value="laser" />
    <param name="odom_frame" value="odom" />
    <param name="tf_map_scanmatch_transform_frame_name" value="laser" />
    <param name="pub_map_odom_transform"                value="false"/>
    <param name="pub_map_scanmatch_transform"           value="true"/>
    <param name="pub_odometry"                          value="true"/>
    <param name="map_resolution"                        value="0.05"/>
    <param name="map_size"                              value="2048"/>
    <param name="map_multi_res_levels"                  value="2" />
    <param name="map_update_angle_thresh"               value="0.06" />
    <param name="scan_topic"                            value="/scan"/>

  </node>

  <group ns="rtabmap">

    <!-- Use RGBD synchronization -->
    <!-- Here is a general example using a standalone nodelet, 
         but it is recommended to attach this nodelet to nodelet 
         manager of the camera to avoid topic serialization -->
    <node pkg="nodelet" type="nodelet" name="rgbd_sync" args="standalone rtabmap_sync/rgbd_sync" output="screen">
      <remap from="rgb/image"       to="/camera/color/image_raw"/>
      <remap from="depth/image"     to="/camera/aligned_depth_to_color/image_raw"/>
      <remap from="rgb/camera_info" to="/camera/color/camera_info"/>
      <remap from="rgbd_image"      to="rgbd_image"/> <!-- output -->
      
      <!-- Should be true for not synchronized camera topics 
           (e.g., false for kinectv2, zed, realsense, true for xtion, kinect360)-->
      <param name="approx_sync"       value="false"/> 
    </node>

    <node name="rtabmap" pkg="rtabmap_slam" type="rtabmap" output="screen" args="--delete_db_on_start">
          <param name="frame_id" type="string" value="base_link"/>

          <param name="subscribe_depth" type="bool" value="false"/>
          <param name="subscribe_rgbd" type="bool" value="true"/>
          <param name="subscribe_scan" type="bool" value="true"/>

          <remap from="odom" to="/scanmatch_odom"/>
          <remap from="scan" to="/scan"/>
          <remap from="rgbd_image" to="rgbd_image"/>

          <param name="queue_size" type="int" value="10"/>

          <!-- RTAB-Map's parameters -->
          <param name="RGBD/NeighborLinkRefining" type="string" value="true"/>
          <param name="RGBD/ProximityBySpace"     type="string" value="true"/>
          <param name="RGBD/AngularUpdate"        type="string" value="0.01"/>
          <param name="RGBD/LinearUpdate"         type="string" value="0.01"/>
          <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
          <param name="Grid/FromDepth"            type="string" value="false"/> <!-- occupancy grid from lidar -->
          <param name="Reg/Force3DoF"             type="string" value="true"/>
          <param name="Reg/Strategy"              type="string" value="1"/> <!-- 1=ICP -->
          
          <!-- ICP parameters -->
          <param name="Icp/VoxelSize"                 type="string" value="0.05"/>
          <param name="Icp/MaxCorrespondenceDistance" type="string" value="0.1"/>
    </node>
  </group>
</launch>